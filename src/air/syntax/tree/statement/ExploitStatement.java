package air.syntax.tree.statement;

import air.modules.core.Module;
import air.patterns.Visitor;
import air.syntax.tree.expression.Expression;

public class ExploitStatement implements Statement {

    private static final String PACKAGE = "air.modules.";

    public final Expression expression;

    public ExploitStatement(Expression expression) {
        this.expression = expression;
    }

    @Override
    public void launch() {
        try {
            String name = expression.count().asString();
            Module module = (Module) Class.forName(PACKAGE + name).newInstance();
            module.init();
        } catch (Exception ignored) {}
    }

    @Override
    public void accept(Visitor visitor) {
        visitor.visit(this);
    }

    @Override
    public String toString() {
        return "exploit " + expression;
    }
}
